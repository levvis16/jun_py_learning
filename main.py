from aiogram import F, Bot, Dispatcher
from aiogram.filters import CommandStart, Command
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.types import (
    KeyboardButton,
    ReplyKeyboardMarkup,
    Message,
)

BOT_TOKEN = '7964586647:AAH6OpF8PBINDn0Cg5R31u0zlNp1dFzCXrk'

bot = Bot(BOT_TOKEN)
dp = Dispatcher()

light_db = {
    'balance': 0,
    'rashod': 0,
    'zarabotok': 0,
    'summar': 0,
}

# –§–ª–∞–≥–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è
changing_mode = None  # 'balance', 'rashod', 'zarabotok'

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
kb_builder = ReplyKeyboardBuilder()
balance = KeyboardButton(text='–±–∞–ª–∞–Ω—Åüí∏')
rashod = KeyboardButton(text='—Ä–∞—Å—Ö–æ–¥—ã‚ùóÔ∏è')
summar = KeyboardButton(text='–∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞')
zarabotok = KeyboardButton(text='–∑–∞—Ä–∞–±–æ—Ç–æ–∫‚úÖ')
kb_builder.row(balance, width=1)
kb_builder.row(zarabotok, rashod, width=2)
kb_builder.row(summar, width=1)
keyboard: ReplyKeyboardMarkup = kb_builder.as_markup(resize_keyboard=True)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –±–∞–ª–∞–Ω—Å–∞
balance_builder = ReplyKeyboardBuilder()
change_balance = KeyboardButton(text='–∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
back_to_menu = KeyboardButton(text='–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
balance_builder.row(change_balance, back_to_menu, width=2)
balance_keyboard: ReplyKeyboardMarkup = balance_builder.as_markup(resize_keyboard=True)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤
rashod_builder = ReplyKeyboardBuilder()
change_rashod = KeyboardButton(text='–∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã')
back_to_menu_rashod = KeyboardButton(text='–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
rashod_builder.row(change_rashod, back_to_menu_rashod, width=2)
rashod_keyboard: ReplyKeyboardMarkup = rashod_builder.as_markup(resize_keyboard=True)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –∑–∞—Ä–∞–±–æ—Ç–∫–∞
zarabotok_builder = ReplyKeyboardBuilder()
change_zarabotok = KeyboardButton(text='–∏–∑–º–µ–Ω–∏—Ç—å –∑–∞—Ä–∞–±–æ—Ç–æ–∫')
back_to_menu_zarabotok = KeyboardButton(text='–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
zarabotok_builder.row(change_zarabotok, back_to_menu_zarabotok, width=2)
zarabotok_keyboard: ReplyKeyboardMarkup = zarabotok_builder.as_markup(resize_keyboard=True)

@dp.message(CommandStart())
async def process_start(message: Message):
    await message.answer(text='–≠—Ç–æ –±–æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä\n —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /menu\n –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–∏—Å–∞—Ç—å @Levvis22')

@dp.message(Command('menu'))
async def main(message: Message):
    global changing_mode
    changing_mode = None
    await message.answer('–≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=keyboard)

@dp.message(F.text == '–±–∞–ª–∞–Ω—Åüí∏')
async def show_balance(message: Message):
    global changing_mode
    changing_mode = None
    await message.answer(
        f'–≤–∞—à –±–∞–ª–∞–Ω—Å: {light_db["balance"]}\n\n'
        '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?',
        reply_markup=balance_keyboard
    )

@dp.message(F.text == '—Ä–∞—Å—Ö–æ–¥—ã‚ùóÔ∏è')
async def show_expenses(message: Message):
    global changing_mode
    changing_mode = None
    await message.answer(
        f'–≤–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã: {light_db["rashod"]}\n\n'
        '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?',
        reply_markup=rashod_keyboard
    )

@dp.message(F.text == '–∑–∞—Ä–∞–±–æ—Ç–æ–∫‚úÖ')
async def show_income(message: Message):
    global changing_mode
    changing_mode = None
    await message.answer(
        f'–≤–∞—à –∑–∞—Ä–∞–±–æ—Ç–æ–∫: {light_db["zarabotok"]}\n\n'
        '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?',
        reply_markup=zarabotok_keyboard
    )

@dp.message(F.text == '–∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞')
async def show_summ(message:Message):
    ans = light_db['balance'] - light_db['rashod'] + light_db['zarabotok']
    await message.answer(f'–≤–∞—à–∞ –∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {ans}')

@dp.message(F.text == '–∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
async def change_balance_handler(message: Message):
    global changing_mode
    changing_mode = 'balance'
    await message.answer(
        '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞:',
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text='–æ—Ç–º–µ–Ω–∞')]],
            resize_keyboard=True
        )
    )

@dp.message(F.text == '–∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã')
async def change_rashod_handler(message: Message):
    global changing_mode
    changing_mode = 'rashod'
    await message.answer(
        '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤:',
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text='–æ—Ç–º–µ–Ω–∞')]],
            resize_keyboard=True
        )
    )

@dp.message(F.text == '–∏–∑–º–µ–Ω–∏—Ç—å –∑–∞—Ä–∞–±–æ—Ç–æ–∫')
async def change_zarabotok_handler(message: Message):
    global changing_mode
    changing_mode = 'zarabotok'
    await message.answer(
        '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞—Ä–∞–±–æ—Ç–∫–∞:',
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text='–æ—Ç–º–µ–Ω–∞')]],
            resize_keyboard=True
        )
    )

@dp.message(F.text == '–æ—Ç–º–µ–Ω–∞')
async def cancel_change(message: Message):
    global changing_mode
    changing_mode = None
    await message.answer('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=keyboard)

@dp.message(F.text == '–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
async def back_to_main_menu(message: Message):
    global changing_mode
    changing_mode = None
    await message.answer('–≤–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=keyboard)

# –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
@dp.message()
async def handle_value_input(message: Message):
    global changing_mode
    
    if changing_mode:
        try:
            new_value = int(message.text)
            if changing_mode == 'balance':
                light_db['balance'] = new_value
                await message.answer(f'‚úÖ –ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {new_value}', reply_markup=balance_keyboard)
            elif changing_mode == 'rashod':
                light_db['rashod'] = new_value
                await message.answer(f'‚úÖ –†–∞—Å—Ö–æ–¥—ã –∏–∑–º–µ–Ω–µ–Ω—ã –Ω–∞: {new_value}', reply_markup=rashod_keyboard)
            elif changing_mode == 'zarabotok':
                light_db['zarabotok'] = new_value
                await message.answer(f'‚úÖ –ó–∞—Ä–∞–±–æ—Ç–æ–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {new_value}', reply_markup=zarabotok_keyboard)
            
            changing_mode = None
            
        except ValueError:
            await message.answer('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ:')

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    dp.run_polling(bot)